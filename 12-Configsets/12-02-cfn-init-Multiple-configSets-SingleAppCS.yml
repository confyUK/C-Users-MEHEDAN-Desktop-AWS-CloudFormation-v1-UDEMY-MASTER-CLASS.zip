AWSTemplateFormatVersion: 2010-09-09
Description: CFN Init Demo - Just create Metadata Template

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

Resources: 
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My SG with port 22, 8080 and 80 inbound
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'          
          ToPort: '8080'
          CidrIp: 0.0.0.0/0

  MyVMInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M       
    Metadata:
      Comment: Deploy a simple tomcat Application
      AWS::CloudFormation::Init:
        configSets:
          SingleAppCS:
            - App1                
          DualAppCS:
            - ConfigSet: "SingleAppCS"  
            - App2
          default:
            - ConfigSet: "DualAppCS"                        
        App1:
          packages:
            yum:
              java-1.8.0-openjdk.x86_64: []
              java-1.8.0-openjdk-devel: []
              tomcat8: []
          groups:
            groupone: {}
            grouptwo:
              gid: "501"              
          users:
            user1:
              groups:
                - groupone
                - grouptwo
              uid: "501"                              
              homeDir: "/tmp"
          sources:
            /tmp: "https://s3.us-east-2.amazonaws.com/cfn-init-0189/cfn/demo2.zip"
          files:
            "/etc/cfn/cfn-hup.conf":
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=3
              mode: "000400"
              owner: "root"
              group: "root"
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.MyVMInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyVMInstance --region ${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"                      
          commands:
            test1:
               command: "chmod 755 demo.war"
               cwd: "/tmp"                            
            test2:
               command: "sudo yum -y erase java-1.7.0-openjdk.x86_64"
               cwd: "~"         
            test3:               
              command: "rm -rf demo*"
              cwd: "/var/lib/tomcat8/webapps"
            test4:
              command: "cp demo.war /var/lib/tomcat8/webapps"                                  
              cwd: "/tmp"
          services:
            sysvinit:
              tomcat8: 
                enabled: "true"
                ensureRunning: "true"
        App2:
          commands:
            test1:
              command: "mkdir ROOT"                          
              cwd: "/var/lib/tomcat8/webapps"
            test2:
              command: "echo \"$INDEXCONTENT\" > index.html"              
              env: 
                INDEXCONTENT: "Root Page of tomcat from App2"
              cwd: "/var/lib/tomcat8/webapps/ROOT"                
    Properties:
      ImageId: ami-0cd3dfa4e37921605
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref MySecurityGroup
      UserData:
        "Fn::Base64": 
          !Sub |
            #!/bin/bash -xe
            # Get latest CloudFormation package - These packages change frequently
            yum update -y aws-cfn-bootstrap
            # Start cfn-init to Install all Metadata content (pacakges, sources, files, commands and services )
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r MyVMInstance --configsets SingleAppCS --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
            # Signal the status from cfn-init 
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource MyVMInstance --region ${AWS::Region}
            # Start cfn-hup daemon so that it will keep listening to any changes to EC2 Instance Metadata. 
            /opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'


Outputs:
  App1URL:
    Description: App1 URL to access
    Value: !Sub 'http://${MyVMInstance.PublicDnsName}:8080/demo/hello' 
  App2URL:
    Description: App2 URL to access
    Value: !Sub 'http://${MyVMInstance.PublicDnsName}:8080/index.html' 


